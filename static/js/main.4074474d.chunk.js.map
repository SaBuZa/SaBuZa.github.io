{"version":3,"sources":["logo.svg","main/home/index.js","main/header/index.js","main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeComponent","react_default","a","createElement","className","Component","HeaderComponent","href","MainIndex","class","main_header","main_home","App","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4074474d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './home.css';\n\nclass HomeComponent extends Component {\n  render() {\n    return (\n      <div className=\"HomeContainer\">\n        <div className=\"col\">\n          ssssssssaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n        </div>\n        <div className=\"colr\">\n\n            Ediaaaaaaaat <code>uwahhhhhhhhhhhhhhhh</code> Alooooooooooooooooooooooooooo.\n\n        </div>\n        <div className=\"col\">\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n          zzzzzdadfaszz<br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomeComponent;\n","import React, { Component } from 'react';\r\nimport './header.css';\r\n\r\nclass HeaderComponent extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark header-styles\">\r\n        <a className=\"navbar-brand\" href=\"/home\">Sarot Busala</a>\r\n\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Projects</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Publications</a>\r\n            </li>\r\n            \r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Resume</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/home\">Blogs</a>\r\n            </li>\r\n\r\n          </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React, { Component } from 'react';\n\nimport HomeComponent from './home';\nimport HeaderComponent from './header';\n\nimport './styles.css';\n\nclass MainIndex extends Component {\n  render() {\n    return (\n      <div class = \"bg-css\">\n        <div class = \"container\">\n        <div class = \"bg-content\">\n          <HeaderComponent />\n          <div class = \"home-content\">\n            <HomeComponent />\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainIndex;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainIndex from './main';\n\nclass App extends Component {\n  render(){\n    return (\n          <MainIndex/>\n    );\n\n\n  }\n  /*render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }*/\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}